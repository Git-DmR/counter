{"version":3,"sources":["components/counter/index.js","containers/counter.js","components/counterManager/index.js","containers/counterManager.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","handleIncrement","handleReset","handleDecrement","currentValue","id","onClick","CounterContainer","props","state","bind","this","setState","React","Component","addCounter","removeCounter","totalCounters","CounterManagerContainer","allCounters","i","push","counterItems","map","item","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAaeA,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,gBAAiBC,EAAlD,EAAkDA,aAAlD,EAAgEC,GAAhE,OACd,gCACE,8BACE,6BAAK,aAAeD,MAEtB,wBAAQE,QAASL,EAAjB,wBACA,wBAAQK,QAASJ,EAAjB,oBACA,wBAAQI,QAASH,EAAjB,4BCqCWI,E,kDA1Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXL,aAAc,EACdC,GAAI,GAEN,EAAKJ,gBAAkB,EAAKA,gBAAgBS,KAArB,gBACvB,EAAKR,YAAc,EAAKA,YAAYQ,KAAjB,gBACnB,EAAKP,gBAAkB,EAAKA,gBAAgBO,KAArB,gBARN,E,mDAWnB,WAAmB,IAAD,OAChBC,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBL,aAAc,EAAKK,MAAML,aAAe,Q,yBAI5C,WACEO,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBL,aAAc,Q,6BAIlB,WAAmB,IAAD,OAChBO,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBL,aAAc,EAAKK,MAAML,aAAe,Q,oBAI5C,WACE,OACE,cAAC,EAAD,CACEH,gBAAiBU,KAAKV,gBACtBC,YAAaS,KAAKT,YAClBC,gBAAiBQ,KAAKR,gBACtBC,aAAcO,KAAKF,MAAML,aACzBC,GAAIM,KAAKF,MAAMJ,S,GArCQQ,IAAMC,WCOtBd,EARC,SAAC,GAAD,IAAGe,EAAH,EAAGA,WAAYC,EAAf,EAAeA,cAAf,IAA8BC,qBAA9B,MAA8C,EAA9C,SACd,gCACE,kDAAqBA,KACrB,wBAAQX,QAASS,EAAjB,0BACA,wBAAQT,QAASU,EAAjB,iCC4CWE,E,kDA7Cb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXQ,cAAe,GAEjB,EAAKF,WAAa,EAAKA,WAAWL,KAAhB,gBAClB,EAAKM,cAAgB,EAAKA,cAAcN,KAAnB,gBANJ,E,8CASnB,WAAc,IAAD,OACXC,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBQ,cAAe,EAAKR,MAAMQ,cAAgB,Q,2BAI9C,WAAiB,IAAD,OACVN,KAAKF,MAAMQ,eACbN,KAAKC,UAAS,SAACH,GAAD,MAAY,CACxBQ,cAAe,EAAKR,MAAMQ,cAAgB,Q,oBAKhD,WAGE,IAFA,IAAME,EAAc,GAEXC,EAAI,EAAGA,EAAIT,KAAKF,MAAMQ,cAAeG,GAAK,EACjDD,EAAYE,KAAKD,GAGnB,IAAME,EAAeH,EAAYI,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,GAAuBA,MAEtE,OACE,gCACE,cAAC,EAAD,CACET,WAAYJ,KAAKI,WACjBC,cAAeL,KAAKK,cACpBC,cAAeN,KAAKF,MAAMQ,gBAE3BK,S,GAxC6BT,IAAMC,W,MCW7BW,MAXf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,2BCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.488530e2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Counter = ({ handleIncrement, handleReset, handleDecrement, currentValue, id }) => (\n  <div>\n    <div>\n      <h2>{\"Counter:  \" + currentValue}</h2>\n    </div>\n    <button onClick={handleIncrement}>Increment.</button>\n    <button onClick={handleReset}>Reset.</button>\n    <button onClick={handleDecrement}>Decrement.</button>\n  </div>\n);\n\nexport default Counter;\n","import React from \"react\";\nimport Counter from \"../components/counter/index.js\";\n\nclass CounterContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentValue: 0,\n      id: 0,\n    };\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleDecrement = this.handleDecrement.bind(this);\n  }\n\n  handleIncrement() {\n    this.setState((state) => ({\n      currentValue: this.state.currentValue + 1,\n    }));\n  }\n\n  handleReset() {\n    this.setState((state) => ({\n      currentValue: 0,\n    }));\n  }\n\n  handleDecrement() {\n    this.setState((state) => ({\n      currentValue: this.state.currentValue - 1,\n    }));\n  }\n\n  render() {\n    return (\n      <Counter\n        handleIncrement={this.handleIncrement}\n        handleReset={this.handleReset}\n        handleDecrement={this.handleDecrement}\n        currentValue={this.state.currentValue}\n        id={this.state.id}\n      />\n    );\n  }\n}\n\nexport default CounterContainer;\n","import React from \"react\";\n\nconst Counter = ({ addCounter, removeCounter, totalCounters = 0 }) => (\n  <div>\n    <h1>Total counters: {totalCounters}</h1>\n    <button onClick={addCounter}>Add counter.</button>\n    <button onClick={removeCounter}>Remove Counter.</button>\n  </div>\n);\n\nexport default Counter;\n","import React from \"react\";\nimport CounterContainer from \"../containers/counter\";\nimport CounterManager from \"../components/counterManager/index.js\";\n\nclass CounterManagerContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalCounters: 0,\n    };\n    this.addCounter = this.addCounter.bind(this);\n    this.removeCounter = this.removeCounter.bind(this);\n  }\n\n  addCounter() {\n    this.setState((state) => ({\n      totalCounters: this.state.totalCounters + 1,\n    }));\n  }\n\n  removeCounter() {\n    if (this.state.totalCounters) {\n      this.setState((state) => ({\n        totalCounters: this.state.totalCounters - 1,\n      }));\n    }\n  }\n\n  render() {\n    const allCounters = [];\n\n    for (var i = 0; i < this.state.totalCounters; i += 1) {\n      allCounters.push(i);\n    }\n\n    const counterItems = allCounters.map((item) => <CounterContainer key={item} />);\n\n    return (\n      <div>\n        <CounterManager\n          addCounter={this.addCounter}\n          removeCounter={this.removeCounter}\n          totalCounters={this.state.totalCounters}\n        />\n        {counterItems}\n      </div>\n    );\n  }\n}\n\nexport default CounterManagerContainer;\n","import CounterContainer from \"../src/containers/counter\";\nimport CounterManagerContainer from \"./containers/counterManager\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CounterContainer />\n      <hr />\n      <CounterManagerContainer />\n      <hr />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}